#!/bin/sh

# This script will compile or run another finishing operation on a document. I
# have this script run via vim.
#
# Compiles .tex. groff (.mom, .ms), .rmd, .md, .org.  Opens .sent files as sent
# presentations. Runs scripts based on extention or shebang.
#
# Note that .tex files which you wish to compile with XeLaTeX should have the
# string "xelatex" somewhere in a comment/command in the first 5 lines.

file=$(readlink -f "$1")
dir=${file%/*}
base="${file%.*}"
ext="${file##*.}"

cd "$dir" || exit 1

textype() { \
    command="latexmk"
    $command "$base"
}

case "$ext" in
  sh) bash "$file";;
	py) python "$file" ;;
	[rR]md) Rscript -e "rmarkdown::render('$file', quiet=TRUE)" ;;
	tex) textype "$file" ;;
  typ) typst compile "$file";;
  ppt) soffice --headless --convert-to pdf "$file" ;;
  docx|doc) soffice --headless --convert-to pdf "$file" ;;
  xlsx|xls) soffice --headless --convert-to csv "$file" ;;
  csv) soffice --headless --convert-to xlsx --infilter=csv:44,34,76 "$file";;
  # lua) lua "$file";;
  lua) nvim -l "$file";;
  js) node "$file";;
  html) "$BROWSER" "$file";;
  caj) caj2pdf convert "$file";;
	[0-9]) preconv "$file" | refer -PS -e | groff -mandoc -T pdf > "$base".pdf ;;
	rs) cargo run ;;
  ui) pyside6-uic "$file" -o "$base"_ui.py ;;
	sass) sassc -a "$file" "$base.css" ;;
	scad) openscad -o "$base".stl "$file" ;;
	sent) setsid -f sent "$file" 2>/dev/null ;;
	c) gcc "$file" -o "$base" && "$base" ;;
	cpp) g++ "$file" -o "$base" && "$base" ;;
	cs) mcs "$file" && mono "$base".exe ;;
	go) go run "$file" ;;
	h) sudo make install ;;
	java) javac "$file" && java "${1%.*}" ;;
	m) octave "$file" ;;
	mom) preconv "$file" | refer -PS -e | groff -mom -kept -T pdf > "$base".pdf ;;
	ms) preconv "$file" | refer -PS -e | groff -me -ms -kept -T pdf > "$base".pdf ;;
	org) emacs "$file" --batch -u "$USER" -f org-latex-export-to-pdf ;;
	*) sed -n '/^#!/s/^#!//p; q' "$file" | xargs -r -I % "$file" ;;
esac
