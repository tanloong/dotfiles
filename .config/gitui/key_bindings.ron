// bit for modifiers
// bits: 0  None 
// bits: 1  SHIFT
// bits: 2  CONTROL
//
// Note:
// If the default key layout is lower case,
// and you want to use `Shift + q` to trigger the exit event,
// the setting should like this `exit: Some(( code: Char('Q'), modifiers: ( bits: 1,),)),`
// The Char should be upper case, and the shift modified bit should be set to 1.
//
// Note:
// find `KeysList` type in src/keys/key_list.rs for all possible keys.
// every key not overwritten via the config file will use the default specified there
(
    focus_right: Some(( code: Char('l'), modifiers: ( bits: 0,),)),
    focus_left: Some(( code: Char('h'), modifiers: ( bits: 0,),)),
    focus_above: Some(( code: Char('k'), modifiers: ( bits: 0,),)),
    focus_below: Some(( code: Char('j'), modifiers: ( bits: 0,),)),

    move_left: Some(( code: Char('h'), modifiers: ( bits: 0,),)),
    move_right: Some(( code: Char('l'), modifiers: ( bits: 0,),)),
    move_up: Some(( code: Char('k'), modifiers: ( bits: 0,),)),
    move_down: Some(( code: Char('j'), modifiers: ( bits: 0,),)),

    popup_up: Some(( code: Char('p'), modifiers: ( bits: 2,),)),
    popup_down: Some(( code: Char('n'), modifiers: ( bits: 2,),)),

    page_up: Some(( code: Char('b'), modifiers: ( bits: 2,),)),
    page_down: Some(( code: Char('f'), modifiers: ( bits: 2,),)),
    home: Some(( code: Char('g'), modifiers: ( bits: 0,),)),
    end: Some(( code: Char('G'), modifiers: ( bits: 1,),)),
    shift_up: Some(( code: Char('K'), modifiers: ( bits: 1,),)),
    shift_down: Some(( code: Char('J'), modifiers: ( bits: 1,),)),

    open_help: Some(( code: Char('?'), modifiers: ( bits: 0,),)),
    edit_file: Some(( code: Char('e'), modifiers: ( bits: 0,),)),
    stage_unstage_item: Some(( code: Char(' '), modifiers: ( bits: 0,),)),
    pull: Some(( code: Char('f'), modifiers: ( bits: 0,),)),
    push: Some(( code: Char('p'), modifiers: ( bits: 0,),)),
    force_push: Some(( code: Char('P'), modifiers: ( bits: 1,),)),
    create_branch: Some(( code: Char('n'), modifiers: ( bits: 0,),)),
    delete_branch: Some(( code: Char('D'), modifiers: ( bits: 0,),)),
    rename_branch: Some(( code: Char('r'), modifiers: ( bits: 0,),)),
    rebase_branch: Some(( code: Char('R'), modifiers: ( bits: 1,),)),
    merge_branch: Some(( code: Char('m'), modifiers: ( bits: 0,),)),
    abort_merge: Some(( code: Char('M'), modifiers: ( bits: 1,),)),
    exit_popup: Some(( code: Esc, modifiers: ( bits: 0,),)),
    open_commit: Some(( code: Char('c'), modifiers: ( bits: 0,),)),
    open_commit_editor: Some(( code: Char('e'), modifiers: ( bits: 2,),)),
    file_find: Some(( code: Char('/'), modifiers: ( bits: 0,),)), // in Files tab
    toggle_workarea: Some(( code: Tab, modifiers: ( bits: 0,),)),
    tab_toggle: Some(( code: Char('l'), modifiers: ( bits: 2,),)),
    tab_toggle_reverse: Some(( code: Char('h'), modifiers: ( bits: 2,),)),

    status_reset_item: Some(( code: Char('D'), modifiers: ( bits: 1,),)),

    diff_reset_lines: Some(( code: Char('d'), modifiers: ( bits: 0,),)),
    diff_stage_lines: Some(( code: Char('s'), modifiers: ( bits: 0,),)),

    stashing_save: Some(( code: Char('w'), modifiers: ( bits: 0,),)),
    stashing_toggle_index: Some(( code: Char('m'), modifiers: ( bits: 0,),)),

    stash_open: Some(( code: Char('l'), modifiers: ( bits: 0,),)),

)
